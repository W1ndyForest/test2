name: test
on:
  push:
    branches:
      - 'v[0-9]+.[0-9]+'
  
jobs:
  build:
    if: "!startsWith(github.event.head_commit.message, '#NORUN')"

    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      
     
      - name: Build an image from Dockerfile
        run: |
          docker build -t docker.io/my-organization/my-app:${{ github.sha }} .
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/my-organization/my-app:${{ github.sha }}'
          format: 'table'
          output: 'Report_Table.txt'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,LOW'  

      
      - name: Slack Notification
        if: ${{failure()}}
        uses: rtCamp/action-slack-notify@v2
        env:
            SLACK_WEBHOOK: ${{ secrets.TEST_SUBMISSION }}
            SLACK_COLOR: ${{ job.status }}
            SLACK_MESSAGE: 'FAILED'
            SLACK_TITLE: Scan Failed-ZWQ
        

      - uses: MeilCli/slack-upload-file@v3
        if: ${{failure()}}
        with:
          slack_token: ${{ secrets.SLACK_TOKEN }}
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          file_path: './Report_Table.txt'
          initial_comment: 'ZWQ de table.'

      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      
      - id: docker_meta
        uses: docker/metadata-action@v4.4.0
        with:
          images: doker.io/windyforest/test/test
          tags: type=sha,format=long
      
      -
        name: Build and push
        uses: docker/build-push-action@v5
        id: build-and-push
        with:
          context: "{{defaultContext}}"
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/test:${{ github.sha }}

     #2
      
   

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.1.2

      - name: Display Cosign version
        run: cosign version

      - name: Sign image with a key
        run: |
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY "${TAGS}@${DIGEST}"
        env:
          TAGS: ${{ steps.docker_meta.outputs.tags }}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}




      

     

      - name: Send Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
            SLACK_WEBHOOK: ${{ secrets.TEST_SUBMISSION }}
            SLACK_COLOR: good  
            SLACK_MESSAGE: |
              Name: ZHU WENQI
              Matriculation Number: A0285888Y
              Email: e1221700@u.nus.edu
              Repository: ${{ github.event.repository.html_url }}
              Docker Hub URL: ${{ secrets.DOCKERHUB_URL }}